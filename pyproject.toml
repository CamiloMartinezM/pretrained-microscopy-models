[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"
# requires = ["flit_core >=3.2,<4"]
# build-backend = "flit_core.buildapi"

[project]
name = "pretrained_microscopy_models"
version = "0.1.0"
description = "Pre-trained microscopy encoders for segmentation and analysis."
authors = [{ name = "Joshua Stuckner", email = "joshua.stuckner@nasa.gov" }]
license = { file = "LICENSE" }
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
]
requires-python = ">=3.10"

[tool.setuptools.packages.find]
where = ["."] # Look for packages in the current directory (project root)
# Optionally include/exclude specific top-level directories if needed
include = ["pretrained_microscopy_models*"] # Include only specific directories
exclude = ["examples", "readme_images", "instance_segmentation", "benchmark_segmentation_data"] # Exclude non-code directories

[tool.ruff]
line-length = 99
target-version = "py310"

[tool.ruff.lint]
select = [
    "ALL", # include all the rules, including new ones
]
ignore = [
    "D413",
    "TRY003",  # Avoid specifying long messages outside the exception class
    "EM102",   # Exception must not use an f-string literal, assign to variable first
    "SIM108",  # Use ternary operator `prev_timestamp = value[-1] if isinstance(value, list) else value` instead of `if`-`else`-block
    "PLR5501", # Use `elif` instead of `else` then `if`, to reduce indentation
    "ERA001",  # Found commented-out code
    "T201",    # `print` found
    "BLE001",  # Do not catch blind exception: `Exception`
    "C901",    # function is too complex (13 > 10)
    "PLR0912", # Too many branches (13 > 12)
    "UP031",   # Use format specifiers instead of percent format
    "EM101",   # Exception must not use a string literal, assign to variable first
    "PLR0913", # Too many arguments in function definition (6 > 5)
    "PLR0915", # Too many statements (65 > 50)
    "TRY301",  # Abstract `raise` to an inner function
    "PLR2004", # Magic value used in comparison, consider replacing with a constant variable
    "N803",    # Argument name should be lowercase
    "N806",    # Variable name should be lowercase
]

[tool.ruff.format]

# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
